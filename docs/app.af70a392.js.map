{"version":3,"sources":["js/app.js"],"names":["screen","document","querySelector","allbtn","querySelectorAll","executeBtn","value","textContent","slice","eval","forEach","btn","addEventListener","length","getError"],"mappings":";AAAA,IAAMA,OAASC,SAASC,cAAc,oBAChCC,OAASF,SAASG,iBAAiB,mBAMnCC,WAAa,SAAbA,WAAcC,OACXA,OAAAA,OACA,IAAA,QACHN,OAAOO,YAAc,GACrB,MACG,IAAA,MACAP,OAAOO,cACRP,OAAOO,YAAcP,OAAOO,YAAYC,MAAM,GAAG,IAEnD,MACG,IAAA,IACC,IACFR,OAAOO,YAAcE,KAAKT,OAAOO,aACjC,MAAM,SACNP,OAAOO,YAAc,UAEvB,MACF,QACMP,OAAOO,YAGTP,OAAOO,aAAeD,MAFtBN,OAAOO,aAAwB,KAATD,MAAe,GAAKA,QAQlDH,OAAOO,QAAQ,SAAAC,GACbA,EAAIC,iBAAiB,QAAS,WACzBZ,OAAOO,YAAYM,OAAS,IAAmB,SAAbF,EAAIL,MACvCD,WAAWM,EAAIL,OAEfN,OAAOO,YAAc,mBAEvBO,UAAW","file":"app.af70a392.js","sourceRoot":"..\\src","sourcesContent":["const screen = document.querySelector('.screen__content')\r\nconst allbtn = document.querySelectorAll(\".keypad__button\")\r\n\r\n/**\r\n * \r\n * @param {*} value the button value\r\n */\r\nconst executeBtn = (value) => {\r\n  switch(value) {\r\n    case 'reset' :\r\n      screen.textContent = \"\"\r\n      break;\r\n    case 'del':\r\n      if(screen.textContent) {\r\n        screen.textContent = screen.textContent.slice(0,-1)\r\n      }\r\n      break;\r\n    case '=':\r\n      try {\r\n        screen.textContent = eval(screen.textContent)\r\n      } catch {\r\n        screen.textContent = \"Error !\"\r\n      }      \r\n      break;\r\n    default:\r\n      if(!screen.textContent) {\r\n        screen.textContent += value == '0' ? '' : value\r\n      } else {\r\n        screen.textContent += value\r\n      }\r\n  }\r\n}\r\n\r\n// Adding event listener for all btn\r\nallbtn.forEach(btn => {\r\n  btn.addEventListener(\"click\", () => {\r\n    if(screen.textContent.length < 13 || btn.value == 'reset') {\r\n      executeBtn(btn.value)\r\n    } else {\r\n      screen.textContent = \"stack overflow !\"\r\n    }\r\n    getError = false\r\n  })\r\n})\r\n"]}